@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
	Layout = "mainLayout.cshtml";

	var selection = Umbraco.Content(Guid.Parse("9f28fb69-f0f1-41d1-b5ec-2c8fec7a4968"))
    .ChildrenOfType("serviceItemTemplate")
    .Where(x => x.IsVisible());

    var itemsPerPage = 6;

    if (!int.TryParse(Context.Request.Query["page"], out int currentPage))
        currentPage = 1;
        
    var totalItems = selection?.Count() ?? 0;
    var pagedItems = selection?.Skip((currentPage - 1 ) * itemsPerPage).Take(itemsPerPage);
}

<section class="section-services">
    <div class="container">
        @if (!string.IsNullOrEmpty(Model.Value("customHeadline1").ToString())) {
                <h2 class="title">@Model.Value("customHeadline1")</h2>
        } 
        @if (!string.IsNullOrEmpty(Model.Value("customHeadline2").ToString())) {
                <h2 class="title">@Model.Value("customHeadline2")</h2>
        }
        <div class="services">
            @if (pagedItems != null) 
            {
                @foreach (var item in pagedItems)
                {
                    var image = item?.Value<IPublishedContent>("thumbnailImage")?.Url() ?? "";
                    var preamble = item?.Value<string>("preamble") ?? "";

                    <a href="@item.Url()">
                        <div class="serv-item">
                            <div class="serv-header">
                                <h4>@item.Name()</h4>    
                            </div>
                            <div class="serv-body">
                                <img src="@image" alt="@item.Name()">
                            </div>
                            <div class="serv-footer">
                                <p>@preamble</p>
                            </div>
                        </div>
                    </a>
                }
            }
        </div>     
    </div>
</section>
   <section class="pagination">
            <div class="container">
                @if (currentPage > 1)
                {
                    <a href="?page=@(currentPage - 1)" class="change">PREV</a>
                }
                else
                {
                    <span class="change inactive">PREV</span>
                }
                <ul class="pages">
                    @for (int i = 1; i <= Math.Ceiling((decimal)totalItems / itemsPerPage); i++)
                    {
                        <li class="@((i == currentPage) ? "number active" : "number")">
                            <a href="?page=@i">@i</a>
                        </li>
                    }
                </ul>
                @if (currentPage < Math.Ceiling((Decimal)totalItems / itemsPerPage)) 
                {
                    <a class="change" href="?page=@(currentPage + 1)">NEXT</a>
                }
                else 
                {
                    <span class="change inactive">NEXT</span>
                }
            </div>
        </section>
    @await Html.PartialAsync("partials/static/projectFooter.cshtml")
