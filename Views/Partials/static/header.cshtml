@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper
@using Umbraco.Cms.Core
@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Cms.Core.Routing
@using Umbraco.Extensions
@inject IPublishedValueFallback PublishedValueFallback
@inject IPublishedUrlProvider PublishedUrlProvider

@{
    var rootContents = UmbracoHelper.ContentAtRoot();
    var settings = rootContents?.FirstOrDefault(x => x.ContentType.Alias == "settingsPage") ?? null;
    var siteName = settings?.Value<string>("siteName") ?? "";
    var siteLogotype = settings?.Value<IPublishedContent>("siteLogotype")?.Url() ?? "";    
    var selection = Model.Root().Children.Where(x => x.IsVisible(PublishedValueFallback)).ToArray();
}

<header>
    <div class="container">
        <a class="logotype" href="/"><img src="@siteLogotype" alt="@siteName"><h3>Onatrix</h3></a>
        <div id="navbar">
            <nav class="nav-menu">
            @if (selection?.Length > 0)
            {
             @foreach (var item in selection)
            {
                 <a class="@(item.IsAncestorOrSelf(Model) ? "nav-link active" : "nav-link")" href="@item.Url(PublishedUrlProvider)">@item.Name</a>
            }
        }
         </nav>
        </div>
        <div class="search">
            <i class="fa-solid fa-magnifying-glass"></i>
        </div>
        <button id="toggle-mobile-menu" class="btn-circle"><i class="fa-solid fa-bars"></i></button>
    </div>
</header>